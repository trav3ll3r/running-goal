def androidx = rootProject.ext.androidx
def libs = rootProject.ext.libs
def kotlin = rootProject.ext.kotlin
def test = rootProject.ext.testing

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "au.com.beba.runninggoal"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            // Sign with debug key
            storeFile file("src/debug/debug_certificate.jks")
            storePassword "password"
            keyAlias "debug_key"
            keyPassword "password"
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "dataSource"
    productFlavors {
        real {
            dimension "dataSource"
        }

        mock {
            dimension "dataSource"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.google.android.material:material:${androidx.materialVer}"
    implementation "androidx.appcompat:appcompat:${androidx.appcompatVer}"
    implementation "androidx.recyclerview:recyclerview:${androidx.recyclerViewVer}"

    implementation "androidx.constraintlayout:constraintlayout:${androidx.constraintLayoutVer}"

    implementation "androidx.lifecycle:lifecycle-extensions:${androidx.archLifecycleVer}"
    kapt "androidx.lifecycle:lifecycle-compiler:${androidx.archLifecycleVer}"

    // Room (ORM)
    implementation "androidx.room:room-runtime:${androidx.roomVer}"
    kapt "androidx.room:room-compiler:${androidx.roomVer}"

    // DAGGER2 dependencies
    implementation "com.google.dagger:dagger:${libs.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${libs.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${libs.daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${libs.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${libs.daggerVersion}"
    implementation "javax.inject:javax.inject:${libs.javaxInjectVersion}"

    // UTILS
    implementation("com.crashlytics.sdk.android:crashlytics:${libs.crashlytics}") {
        transitive = true
    }
    implementation "com.facebook.stetho:stetho:${libs.stetho}"
}

// KOTLIN, ANKO, KTX
dependencies {
    // Kotlin AND Anko
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin.kotlinVer}"
    implementation "org.jetbrains.anko:anko-sdk25:${kotlin.ankoVer}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlin.kotlinCoroutinesVer}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlin.kotlinCoroutinesVer}"
    implementation "org.jetbrains.anko:anko-coroutines:${kotlin.ankoVer}"
    implementation "org.jetbrains.anko:anko-support-v4:${kotlin.ankoVer}"
    implementation "org.jetbrains.anko:anko-appcompat-v7:${kotlin.ankoVer}"
}

// MODULES
dependencies {
    implementation project(':networking')
}

// TESTING
dependencies {
    testImplementation "junit:junit:${test.junit}"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

}